version: "3.8"
services:
  postgres:
    image: ankane/pgvector:latest
    container_name: postgres_local
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: "user"
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: "database"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      internal:
        ipv4_address: 172.18.0.5
    labels:
      - "traefik.enable=false"
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512m
    restart: unless-stopped

  redis:
    image: redis:latest
    container_name: redis
    volumes:
      - redis_data:/data
    networks:
      internal:
        ipv4_address: 172.18.0.3
    labels:
      - "traefik.enable=false"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
    restart: unless-stopped

  n8n:
    image: n8nio/n8n:latest
    container_name: n8n
    environment:
      DB_TYPE: "postgresdb"
      DB_POSTGRESDB_HOST: "postgres"
      DB_POSTGRESDB_PORT: 5432
      DB_POSTGRESDB_DATABASE: "database"
      DB_POSTGRESDB_USER: "user"
      DB_POSTGRESDB_PASSWORD: "password"
      DB_POSTGRESDB_SSL: "false"
      EXECUTIONS_MODE: "regular"
      CACHE_MODE: "redis"
      CACHE_REDIS_HOST: "redis"
      CACHE_REDIS_PORT: 6379
      CACHE_REDIS_DB: 0
      N8N_HOST: "your-domain.com"
      N8N_PORT: 5678
      N8N_PROTOCOL: "https"
      N8N_EDITOR_BASE_URL: "https://your-domain.com"
      WEBHOOK_URL: "https://your-domain.com"
      N8N_LOG_LEVEL: "info"
      N8N_COMMUNITY_PACKAGES_ENABLED: "true"
      NODE_FUNCTION_ALLOW_EXTERNAL: "*"
      N8N_PUSH_BACKEND: "websocket"
      N8N_DIAGNOSTICS_ENABLED: "false"
      N8N_TEMPLATES_ENABLED: "false"
      GENERIC_TIMEZONE: "America/Denver"
    volumes:
      - n8n_data:/home/node/.n8n
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.n8n.rule=Host(`your-domain.com`)"
      - "traefik.http.routers.n8n.entrypoints=websecure"
      - "traefik.http.routers.n8n.tls=true"
      - "traefik.http.routers.n8n.tls.certresolver=resolver"
      - "traefik.http.services.n8n.loadbalancer.server.port=5678"
    networks:
      internal:
        ipv4_address: 172.18.0.6
    depends_on:
      - postgres
      - redis
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 4g
    restart: unless-stopped

  openwebui:
    image: ghcr.io/open-webui/open-webui:main
    container_name: openwebui
    environment:
      OPENAI_API_BASE_URLS: "http://llama:8080/"
      WEBUI_URL: "https://your-webui-domain.com"
      DATA_DIR: "/app/backend/data"
      NO_PROXY: "0.0.0.0,localhost,127.0.0.1,host.docker.internal"
      UV_SYSTEM_PYTHON: "true"
      WEBUI_NAME: "WebUI"
      REDIS_HOST: "redis"
      REDIS_PORT: 6379
      REDIS_DB: 1
    volumes:
      - openwebui_data:/app/backend/data
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.openwebui.rule=Host(`your-webui-domain.com`)"
      - "traefik.http.routers.openwebui.entrypoints=websecure"
      - "traefik.http.routers.openwebui.tls=true"
      - "traefik.http.routers.openwebui.tls.certresolver=resolver"
      - "traefik.http.services.openwebui.loadbalancer.server.port=8080"
    networks:
      internal:
        ipv4_address: 172.18.0.7
    depends_on:
      - llama
      - redis
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 2g
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  llama:
    image: amperecomputingai/llama.cpp:latest
    container_name: llama
    entrypoint: /llm/llama-server
    command:
      - "--model"
      - "/models/model.gguf"
      - "--host"
      - "0.0.0.0"
      - "--port"
      - "8080"
      - "--threads"
      - "3"
      - "--jinja"
      - "--flash-attn"
      - "auto"
      - "-sm"
      - "row"
      - "--temp"
      - "0.6"
      - "--top-k"
      - "20"
      - "--top-p"
      - "0.95"
      - "-c"
      - "40960"
      - "-n"
      - "32768"
      - "--no-mmap"
      - "--mlock"
    ports:
      - "8080:8080"
    volumes:
      - /path/to/your/models:/models
      - /path/to/your/data:/data
    networks:
      internal:
        ipv4_address: 172.18.0.8
    deploy:
      resources:
        limits:
          cpus: '3'
          memory: 18g
    restart: unless-stopped

  traefik:
    image: traefik:v2.11
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--certificatesresolvers.resolver.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.resolver.acme.caserver=https://acme-v02.api.letsencrypt.org/directory"
      - "--certificatesresolvers.resolver.acme.email=your-email@example.com"
      - "--certificatesresolvers.resolver.acme.storage=/letsencrypt/acme.json"
      - "--log.level=INFO"
      - "--providers.file.filename=/etc/traefik/traefik_dynamic.yml"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./acme.json:/letsencrypt/acme.json
      - /path/to/your/traefik_dynamic.yml:/etc/traefik/traefik_dynamic.yml:ro
    networks:
      internal:
        ipv4_address: 172.18.0.2
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=web"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https@docker"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.permanent=true"
    deploy:
      resources:
        limits:
          cpus: '0.25'
          memory: 256m
    restart: unless-stopped

networks:
  internal:
    driver: bridge
    ipam:
      config:
        - subnet: 172.18.0.0/16

volumes:
  postgres_data:
  n8n_data:
  openwebui_data:
  redis_data:
  letsencrypt:
  llama_data:
